let config,knex;_c07‍.x([["default",()=>_c07‍.o]]);_c07‍.w("./config",[["default",["config"],function(v){config=v}]]);_c07‍.w("knex",[["default",["knex"],function(v){knex=v}]]);

const db =knex(config)
_c07‍.g.console.log(config);

;(
    async function(){
        try {
            const exist= await db.schema.hasTable('messages')
            _c07‍.g.console.log(exist);
            if (!exist){
                return await db.schema.createTable('messages',(table)=>{
                    table.increments('id').primary().notNullable()
                    table.string('user',40).notNullable()
                    table.string('message',150).notNullable()
                }).then()
            }
            
        } catch (error) {
            _c07‍.g.console.log(error);
        } finally{
            db.destroy()
        }
    }
)()

const getlAllMes= async ()=>{
    let messages={}
    try{
        messages= await db.select().from('messages')
        _c07‍.g.console.log(messages)
    }
    catch(error){
        _c07‍.g.console.log(error);
    }finally{
        db.destroy()
    }
    return messages
}
const writeMes= async (mes)=>{
    let messages={}
    try{
        messages= await db.from('messages').insert(mes)
        _c07‍.g.console.log(messages)
    }
    catch(error){
        _c07‍.g.console.log(error);
    }finally{
        db.destroy()
    }
}

_c07‍.d({getlAllMes,writeMes});